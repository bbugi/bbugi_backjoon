# -- 코드를 입력하세요

SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, PRODUCT_ID, USER_ID, SALES_AMOUNT
FROM ONLINE_SALE
WHERE SALES_DATE >= '2022-03-01' AND SALES_DATE < '2022-04-01'

UNION ALL

SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, PRODUCT_ID, NULL AS USER_ID, SALES_AMOUNT
FROM OFFLINE_SALE
WHERE SALES_DATE >= '2022-03-01' AND SALES_DATE < '2022-04-01'

ORDER BY SALES_DATE ASC, PRODUCT_ID ASC, USER_ID ASC


# # SELECT *
# # FROM ONLINE_SALE AS ONS
# # JOIN OFFLINE_SALE AS OFFS
# # ON ONS.PRODUCT_ID = OFFS.PRODUCT_ID

# # # OFFLINE_SALE 테이블 우선 정제하기
# # SELECT OFFLINE_SALE_ID, 'NULL' AS USER_ID, PRODUCT_ID, SALES_AMOUNT, DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
# # FROM OFFLINE_SALE

# # 테이블 합치기
# SELECT SALES_DATE, PRODUCT_ID, USER_ID, SALES_AMOUNT
# FROM (

# SELECT ONLINE_SALE_ID, USER_ID, PRODUCT_ID, SALES_AMOUNT, DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
# FROM ONLINE_SALE
# WHERE SALES_DATE >= '2022-03-01' AND SALES_DATE < '2022-04-01'
    
# UNION ALL
    
# SELECT OFFLINE_SALE_ID, 'NULL' AS USER_ID, PRODUCT_ID, SALES_AMOUNT, DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
# FROM OFFLINE_SALE
# WHERE SALES_DATE >= '2022-03-01' AND SALES_DATE < '2022-04-01'
#     ) AS TEMP
    
# ORDER BY SALES_DATE ASC, PRODUCT_ID ASC, USER_ID ASC